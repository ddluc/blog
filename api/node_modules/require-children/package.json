{
  "name": "require-children",
  "version": "0.0.6",
  "description": "Require directory children as an object.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": {
    "name": "Dan Scanlon"
  },
  "license": "ISC",
  "dependencies": {
    "underscore": "~1.6.0"
  },
  "devDependencies": {},
  "repository": {
    "type": "git",
    "url": "https://github.com/danscan/require-children.git"
  },
  "keywords": [
    "require",
    "directory",
    "children",
    "recursive"
  ],
  "bugs": {
    "url": "https://github.com/danscan/require-children/issues"
  },
  "homepage": "https://github.com/danscan/require-children",
  "readme": "Require Children\n================\n\nEasily and safely require a directory as an object whose keys are its children's filenames (without their extensions), \nand whose values are its children as modules.\n\n# Example\n\nTo require a directory `resources/` with children `posts.js`, `comments.js`, and `users.js`:\n\n```javascript\nvar resources = requireChildren('./resources', module);\n\n/**\n * Now all modules contained in ./resources/ are in the object:\n *\n * resources = {\n *   comments: [object Object],\n *   posts: [object Object],\n *   users: [object Object]\n * } \n */\n```\n\n# Installation\n\n`npm install require-children`\n\n# Usage\n\n`requireChildren(directory, destinationModule);`\n\n`requireChildren` always returns a `children` object. The keys of the `children` object are the names of the modules \nthat were successfully loaded from `directory` without their extensions or any spaces.\n\n## params\n+ <String> `directory`: The directory to require children of.\n+ <NodeJS Module> `destinationModule`: The module that is requiring the directory children.\n\n",
  "readmeFilename": "README.md",
  "_id": "require-children@0.0.6",
  "dist": {
    "shasum": "4cf645edc8ff99f30e04153b7bb3ab8502d9d92e"
  },
  "_from": "require-children@",
  "_resolved": "https://registry.npmjs.org/require-children/-/require-children-0.0.6.tgz"
}
